<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Students', 'doctrine');

/**
 * BaseStudents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $student_id
 * @property integer $user_id
 * @property string $stu_fname
 * @property string $stu_lname
 * @property integer $stu_gender
 * @property integer $stu_age
 * @property integer $stu_avatar_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property User $User
 * @property Doctrine_Collection $AssessmentResultBoolean
 * @property Doctrine_Collection $AssessmentResultFloat
 * @property Doctrine_Collection $AssessmentResultInteger
 * @property Doctrine_Collection $AssessmentResultVarchar
 * @property Doctrine_Collection $AssessmentResultsWordHunt
 * @property Doctrine_Collection $MetricResultBoolean
 * @property Doctrine_Collection $MetricResultFloat
 * @property Doctrine_Collection $MetricResultInteger
 * @property Doctrine_Collection $MetricResultVarchar
 * @property Doctrine_Collection $StudentAchievement
 * 
 * @method integer             getStudentId()                 Returns the current record's "student_id" value
 * @method integer             getUserId()                    Returns the current record's "user_id" value
 * @method string              getStuFname()                  Returns the current record's "stu_fname" value
 * @method string              getStuLname()                  Returns the current record's "stu_lname" value
 * @method integer             getStuGender()                 Returns the current record's "stu_gender" value
 * @method integer             getStuAge()                    Returns the current record's "stu_age" value
 * @method integer             getStuAvatarId()               Returns the current record's "stu_avatar_id" value
 * @method timestamp           getCreatedAt()                 Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                 Returns the current record's "updated_at" value
 * @method User                getUser()                      Returns the current record's "User" value
 * @method Doctrine_Collection getAssessmentResultBoolean()   Returns the current record's "AssessmentResultBoolean" collection
 * @method Doctrine_Collection getAssessmentResultFloat()     Returns the current record's "AssessmentResultFloat" collection
 * @method Doctrine_Collection getAssessmentResultInteger()   Returns the current record's "AssessmentResultInteger" collection
 * @method Doctrine_Collection getAssessmentResultVarchar()   Returns the current record's "AssessmentResultVarchar" collection
 * @method Doctrine_Collection getAssessmentResultsWordHunt() Returns the current record's "AssessmentResultsWordHunt" collection
 * @method Doctrine_Collection getMetricResultBoolean()       Returns the current record's "MetricResultBoolean" collection
 * @method Doctrine_Collection getMetricResultFloat()         Returns the current record's "MetricResultFloat" collection
 * @method Doctrine_Collection getMetricResultInteger()       Returns the current record's "MetricResultInteger" collection
 * @method Doctrine_Collection getMetricResultVarchar()       Returns the current record's "MetricResultVarchar" collection
 * @method Doctrine_Collection getStudentAchievement()        Returns the current record's "StudentAchievement" collection
 * @method Students            setStudentId()                 Sets the current record's "student_id" value
 * @method Students            setUserId()                    Sets the current record's "user_id" value
 * @method Students            setStuFname()                  Sets the current record's "stu_fname" value
 * @method Students            setStuLname()                  Sets the current record's "stu_lname" value
 * @method Students            setStuGender()                 Sets the current record's "stu_gender" value
 * @method Students            setStuAge()                    Sets the current record's "stu_age" value
 * @method Students            setStuAvatarId()               Sets the current record's "stu_avatar_id" value
 * @method Students            setCreatedAt()                 Sets the current record's "created_at" value
 * @method Students            setUpdatedAt()                 Sets the current record's "updated_at" value
 * @method Students            setUser()                      Sets the current record's "User" value
 * @method Students            setAssessmentResultBoolean()   Sets the current record's "AssessmentResultBoolean" collection
 * @method Students            setAssessmentResultFloat()     Sets the current record's "AssessmentResultFloat" collection
 * @method Students            setAssessmentResultInteger()   Sets the current record's "AssessmentResultInteger" collection
 * @method Students            setAssessmentResultVarchar()   Sets the current record's "AssessmentResultVarchar" collection
 * @method Students            setAssessmentResultsWordHunt() Sets the current record's "AssessmentResultsWordHunt" collection
 * @method Students            setMetricResultBoolean()       Sets the current record's "MetricResultBoolean" collection
 * @method Students            setMetricResultFloat()         Sets the current record's "MetricResultFloat" collection
 * @method Students            setMetricResultInteger()       Sets the current record's "MetricResultInteger" collection
 * @method Students            setMetricResultVarchar()       Sets the current record's "MetricResultVarchar" collection
 * @method Students            setStudentAchievement()        Sets the current record's "StudentAchievement" collection
 * 
 * @package    ruckus_dev
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStudents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('students');
        $this->hasColumn('student_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('stu_fname', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('stu_lname', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('stu_gender', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('stu_age', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('stu_avatar_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));

        $this->hasMany('AssessmentResultBoolean', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('AssessmentResultFloat', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('AssessmentResultInteger', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('AssessmentResultVarchar', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('AssessmentResultsWordHunt', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('MetricResultBoolean', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('MetricResultFloat', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('MetricResultInteger', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('MetricResultVarchar', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));

        $this->hasMany('StudentAchievement', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));
    }
}