<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Tags', 'doctrine');

/**
 * BaseTags
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tag_id
 * @property string $tag_name
 * @property timestamp $created_at
 * @property Doctrine_Collection $TagTaxonomy
 * 
 * @method integer             getTagId()       Returns the current record's "tag_id" value
 * @method string              getTagName()     Returns the current record's "tag_name" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method Doctrine_Collection getTagTaxonomy() Returns the current record's "TagTaxonomy" collection
 * @method Tags                setTagId()       Sets the current record's "tag_id" value
 * @method Tags                setTagName()     Sets the current record's "tag_name" value
 * @method Tags                setCreatedAt()   Sets the current record's "created_at" value
 * @method Tags                setTagTaxonomy() Sets the current record's "TagTaxonomy" collection
 * 
 * @package    ruckus_dev
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTags extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tags');
        $this->hasColumn('tag_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('tag_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TagTaxonomy', array(
             'local' => 'tag_id',
             'foreign' => 'tag_id'));
    }
}