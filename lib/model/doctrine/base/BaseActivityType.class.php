<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivityType', 'doctrine');

/**
 * BaseActivityType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $activity_type_id
 * @property string $name
 * @property string $act_type_description
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $Activities
 * @property Doctrine_Collection $ActivityParameters
 * @property Doctrine_Collection $AssessmentActivity
 * 
 * @method integer             getActivityTypeId()       Returns the current record's "activity_type_id" value
 * @method string              getName()                 Returns the current record's "name" value
 * @method string              getActTypeDescription()   Returns the current record's "act_type_description" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method Doctrine_Collection getActivities()           Returns the current record's "Activities" collection
 * @method Doctrine_Collection getActivityParameters()   Returns the current record's "ActivityParameters" collection
 * @method Doctrine_Collection getAssessmentActivity()   Returns the current record's "AssessmentActivity" collection
 * @method ActivityType        setActivityTypeId()       Sets the current record's "activity_type_id" value
 * @method ActivityType        setName()                 Sets the current record's "name" value
 * @method ActivityType        setActTypeDescription()   Sets the current record's "act_type_description" value
 * @method ActivityType        setCreatedAt()            Sets the current record's "created_at" value
 * @method ActivityType        setUpdatedAt()            Sets the current record's "updated_at" value
 * @method ActivityType        setActivities()           Sets the current record's "Activities" collection
 * @method ActivityType        setActivityParameters()   Sets the current record's "ActivityParameters" collection
 * @method ActivityType        setAssessmentActivity()   Sets the current record's "AssessmentActivity" collection
 * 
 * @package    ruckus_dev
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseActivityType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_type');
        $this->hasColumn('activity_type_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('act_type_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Activities', array(
             'local' => 'activity_type_id',
             'foreign' => 'activity_type_id'));

        $this->hasMany('ActivityParameters', array(
             'local' => 'activity_type_id',
             'foreign' => 'activity_type_id'));

        $this->hasMany('AssessmentActivity', array(
             'local' => 'activity_type_id',
             'foreign' => 'activity_type_id'));
    }
}