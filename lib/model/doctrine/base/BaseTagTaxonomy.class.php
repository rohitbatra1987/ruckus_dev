<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TagTaxonomy', 'doctrine');

/**
 * BaseTagTaxonomy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tag_taxonomy_id
 * @property integer $book_id
 * @property integer $tag_id
 * @property Tags $Tags
 * @property Book $Book
 * 
 * @method integer     getTagTaxonomyId()   Returns the current record's "tag_taxonomy_id" value
 * @method integer     getBookId()          Returns the current record's "book_id" value
 * @method integer     getTagId()           Returns the current record's "tag_id" value
 * @method Tags        getTags()            Returns the current record's "Tags" value
 * @method Book        getBook()            Returns the current record's "Book" value
 * @method TagTaxonomy setTagTaxonomyId()   Sets the current record's "tag_taxonomy_id" value
 * @method TagTaxonomy setBookId()          Sets the current record's "book_id" value
 * @method TagTaxonomy setTagId()           Sets the current record's "tag_id" value
 * @method TagTaxonomy setTags()            Sets the current record's "Tags" value
 * @method TagTaxonomy setBook()            Sets the current record's "Book" value
 * 
 * @package    ruckus_dev
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTagTaxonomy extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag_taxonomy');
        $this->hasColumn('tag_taxonomy_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('book_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tag_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tags', array(
             'local' => 'tag_id',
             'foreign' => 'tag_id'));

        $this->hasOne('Book', array(
             'local' => 'book_id',
             'foreign' => 'book_id'));
    }
}