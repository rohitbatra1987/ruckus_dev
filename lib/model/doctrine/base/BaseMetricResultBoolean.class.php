<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MetricResultBoolean', 'doctrine');

/**
 * BaseMetricResultBoolean
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $metric_result_id
 * @property integer $metric_id
 * @property integer $book_id
 * @property integer $student_id
 * @property string $result_data
 * @property integer $auto_id
 * @property string $device_id
 * @property string $device_session_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Book $Book
 * @property MetricParameters $MetricParameters
 * @property Students $Students
 * 
 * @method integer             getMetricResultId()    Returns the current record's "metric_result_id" value
 * @method integer             getMetricId()          Returns the current record's "metric_id" value
 * @method integer             getBookId()            Returns the current record's "book_id" value
 * @method integer             getStudentId()         Returns the current record's "student_id" value
 * @method string              getResultData()        Returns the current record's "result_data" value
 * @method integer             getAutoId()            Returns the current record's "auto_id" value
 * @method string              getDeviceId()          Returns the current record's "device_id" value
 * @method string              getDeviceSessionId()   Returns the current record's "device_session_id" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method Book                getBook()              Returns the current record's "Book" value
 * @method MetricParameters    getMetricParameters()  Returns the current record's "MetricParameters" value
 * @method Students            getStudents()          Returns the current record's "Students" value
 * @method MetricResultBoolean setMetricResultId()    Sets the current record's "metric_result_id" value
 * @method MetricResultBoolean setMetricId()          Sets the current record's "metric_id" value
 * @method MetricResultBoolean setBookId()            Sets the current record's "book_id" value
 * @method MetricResultBoolean setStudentId()         Sets the current record's "student_id" value
 * @method MetricResultBoolean setResultData()        Sets the current record's "result_data" value
 * @method MetricResultBoolean setAutoId()            Sets the current record's "auto_id" value
 * @method MetricResultBoolean setDeviceId()          Sets the current record's "device_id" value
 * @method MetricResultBoolean setDeviceSessionId()   Sets the current record's "device_session_id" value
 * @method MetricResultBoolean setCreatedAt()         Sets the current record's "created_at" value
 * @method MetricResultBoolean setUpdatedAt()         Sets the current record's "updated_at" value
 * @method MetricResultBoolean setBook()              Sets the current record's "Book" value
 * @method MetricResultBoolean setMetricParameters()  Sets the current record's "MetricParameters" value
 * @method MetricResultBoolean setStudents()          Sets the current record's "Students" value
 * 
 * @package    ruckus_dev
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMetricResultBoolean extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('metric_result_boolean');
        $this->hasColumn('metric_result_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('metric_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('book_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('student_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('result_data', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('auto_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('device_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('device_session_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Book', array(
             'local' => 'book_id',
             'foreign' => 'book_id'));

        $this->hasOne('MetricParameters', array(
             'local' => 'metric_id',
             'foreign' => 'metric_id'));

        $this->hasOne('Students', array(
             'local' => 'student_id',
             'foreign' => 'student_id'));
    }
}